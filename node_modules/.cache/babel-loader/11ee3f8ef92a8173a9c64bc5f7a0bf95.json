{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenec\\\\Documents\\\\Thinkful\\\\Deployment\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Card\\\\DeckView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useRouteMatch, useParams } from \"react-router-dom\";\nimport { createCard, readDeck, updateCard, readCard, listCards } from \"../../utils/api\";\nimport ListCard from \"./ListCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeskView() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [thisDeck, setThisDeck] = useState([]);\n  const [error, setError] = useState(undefined);\n  const history = useHistory(); //const [listDeckCards, setListDeckCards] = useState([]);\n\n  const [thisDeckCards, setThisDeckCards] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetchReadDeck(deckId) {\n      try {\n        console.log(deckId);\n        const readDeckInfo = await readDeck(deckId, abortController.signal);\n        setThisDeck(readDeckInfo);\n      } catch (error) {\n        setError(error);\n        history.push(`/error/${error}`);\n      }\n    }\n\n    fetchReadDeck(deckId);\n  }, []);\n  useEffect(() => {\n    console.log(thisDeck);\n    const abortController = new AbortController();\n\n    async function fetchDeckCards(deckId) {\n      try {\n        console.log(deckId);\n        const readCards = await listCards(deckId, abortController.signal);\n        setThisDeckCards(readCards);\n      } catch (error) {\n        setError(error);\n        history.push(`/error/${error}`);\n      }\n    }\n\n    fetchDeckCards(deckId);\n  }, []);\n  console.log(thisDeckCards);\n  const listDeckCards = thisDeckCards.map(card => /*#__PURE__*/_jsxDEV(ListCard, {\n    card: card\n  }, card.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), \" / \", thisDeck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: thisDeck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: thisDeck.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}/edit`,\n            type: \"button\",\n            className: \"btn btn-secondary m-1\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}/study`,\n            type: \"button\",\n            className: \"btn btn-primary m-1\",\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), thisDeckCards && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), listDeckCards]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeskView, \"Lrd+eIEHDVu1eU1bz+Rj/7T2hhk=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DeskView;\nexport default DeskView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeskView\");","map":{"version":3,"sources":["C:/Users/kenec/Documents/Thinkful/Deployment/Project_Flashcards_Qualified_1/src/Layout/Card/DeckView.js"],"names":["React","useEffect","useState","Link","useHistory","useRouteMatch","useParams","createCard","readDeck","updateCard","readCard","listCards","ListCard","DeskView","deckId","thisDeck","setThisDeck","error","setError","undefined","history","thisDeckCards","setThisDeckCards","abortController","AbortController","fetchReadDeck","console","log","readDeckInfo","signal","push","fetchDeckCards","readCards","listDeckCards","map","card","id","name","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useRouteMatch, useParams } from \"react-router-dom\";\r\nimport {\r\n  createCard,\r\n  readDeck,\r\n  updateCard,\r\n  readCard,\r\n  listCards,\r\n} from \"../../utils/api\";\r\nimport ListCard from \"./ListCard\";\r\n\r\nfunction DeskView() {\r\n  const { deckId } = useParams();\r\n  const [thisDeck, setThisDeck] = useState([]);\r\n  const [error, setError] = useState(undefined);\r\n  const history = useHistory();\r\n  //const [listDeckCards, setListDeckCards] = useState([]);\r\n  const [thisDeckCards, setThisDeckCards] = useState([]);\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    async function fetchReadDeck(deckId) {\r\n      try {\r\n        console.log(deckId);\r\n        const readDeckInfo = await readDeck(deckId, abortController.signal);\r\n        setThisDeck(readDeckInfo);\r\n      } catch (error) {\r\n        setError(error);\r\n        history.push(`/error/${error}`);\r\n      }\r\n    }\r\n    fetchReadDeck(deckId);\r\n  }, []);\r\n  useEffect(() => {\r\n    console.log(thisDeck);\r\n    const abortController = new AbortController();\r\n    async function fetchDeckCards(deckId) {\r\n      try {\r\n        console.log(deckId);\r\n        const readCards = await listCards(deckId, abortController.signal);\r\n        setThisDeckCards(readCards);\r\n      } catch (error) {\r\n        setError(error);\r\n        history.push(`/error/${error}`);\r\n      }\r\n    }\r\n    fetchDeckCards(deckId);\r\n  }, []);\r\n\r\n  console.log(thisDeckCards);\r\n  const listDeckCards = thisDeckCards.map((card) => (\r\n    <ListCard key={card.id} card={card} />\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"card\">\r\n        <div className=\"card-header\">\r\n          <Link to=\"/\">Home</Link> / {thisDeck.name}\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"card-title\">\r\n            <h1>{thisDeck.name}</h1>\r\n          </div>\r\n          <div className=\"card-text\">\r\n            <p>{thisDeck.description}</p>\r\n            <Link\r\n              to={`/decks/${deckId}/edit`}\r\n              type=\"button\"\r\n              className=\"btn btn-secondary m-1\"\r\n            >\r\n              Edit\r\n            </Link>\r\n            <Link\r\n              to={`/decks/${deckId}/study`}\r\n              type=\"button\"\r\n              className=\"btn btn-primary m-1\"\r\n            >\r\n              Study\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {thisDeckCards && (\r\n        <section>\r\n          <h1>Cards</h1>\r\n          {listDeckCards}\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeskView;\r\n"]},"metadata":{},"sourceType":"module"}