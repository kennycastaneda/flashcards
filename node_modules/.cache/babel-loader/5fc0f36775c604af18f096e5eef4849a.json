{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenec\\\\Documents\\\\Thinkful\\\\Deployment\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Card\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, use } from \"react\";\nimport { Link, useHistory, useRouteMatch, useParams } from \"react-router-dom\";\nimport { createCard, readDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card() {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const {\n    url\n  } = useRouteMatch();\n  const [card, setCard] = useState({});\n  const [breadCrumbs, setBreadCrumbs] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"breadCrumbs\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 50\n  }, this));\n  const [cardType, setCardType] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"card\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 44\n  }, this));\n  const [thisDeck, setThisDeck] = useState([]);\n  const [error, setError] = useState(undefined);\n  const [form, setForm] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"form\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 36\n  }, this));\n  const history = useHistory();\n  const initialFormState = {\n    id: 1,\n    front: \"Front side of card\",\n    back: \"Back side of card\",\n    deckId: deckId\n  };\n  const [formData, setFormData] = useState({ ...initialFormState\n  });\n  /*await setFormData({\r\n      ...formData,\r\n      id: thisDeck.cards.length + 1,\r\n    });\r\n    */\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(setThisDeck).catch(setError);\n\n    if (!cardId) {\n      setFormData({ ...formData,\n        id: thisDeck.cards.length + 1\n      });\n      setBreadCrumbs( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), \" /\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/decks/:deckId\",\n          children: [\" \", thisDeck.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), \" / Add Card\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this));\n      setCardType( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"card-title\",\n          children: [thisDeck.name, \": Add Card\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this));\n      setForm( /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"container-fluid\",\n          children: [\"Front\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            id: \"front\",\n            name: \"front\",\n            value: formData.front,\n            onChange: handleChange,\n            className: \"w-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"container-fluid\",\n          children: [\"Back\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            id: \"back\",\n            name: \"back\",\n            value: formData.back,\n            onChange: handleChange,\n            className: \"w-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deckId}`,\n          type: \"button\",\n          className: \"btn btn-secondary m-1\",\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary m-1\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this));\n    } else {\n      setBreadCrumbs( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), \" /\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/decks/:deckId\",\n          children: [\" \", thisDeck.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), \" / Edit Card \", cardId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this));\n      setCardType( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"card-title\",\n          children: \"Edit Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this));\n    }\n  }, [thisDeck]);\n\n  if (error) {\n    history.push(`/error/${error}`);\n  } //form handling\n\n\n  const handleChange = ({\n    target\n  }) => {\n    setFormData({ ...formData,\n      [target.name]: target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(formData);\n    const abortController = new AbortController();\n    createCard(deckId, formData, abortController.signal).then(setFormData({ ...initialFormState\n    })).catch(setError);\n  };\n\n  if (error) {\n    history.push(`/error/${error}`);\n  }\n\n  if (!cardId) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"card\",\n      children: [breadCrumbs, \" \", cardType, \" \", form]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"card\",\n    children: [breadCrumbs, \" \", cardType, \" \", form]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"Rnj7oUaHk40Tw2x0ywzu+3LWhrg=\", false, function () {\n  return [useParams, useRouteMatch, useHistory];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/kenec/Documents/Thinkful/Deployment/Project_Flashcards_Qualified_1/src/Layout/Card/Card.js"],"names":["React","useEffect","useState","use","Link","useHistory","useRouteMatch","useParams","createCard","readDeck","Card","deckId","cardId","url","card","setCard","breadCrumbs","setBreadCrumbs","cardType","setCardType","thisDeck","setThisDeck","error","setError","undefined","form","setForm","history","initialFormState","id","front","back","formData","setFormData","abortController","AbortController","signal","then","catch","cards","length","name","handleSubmit","handleChange","push","target","value","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, use } from \"react\";\r\nimport { Link, useHistory, useRouteMatch, useParams } from \"react-router-dom\";\r\nimport { createCard, readDeck } from \"../../utils/api\";\r\n\r\nfunction Card() {\r\n  const { deckId, cardId } = useParams();\r\n  const { url } = useRouteMatch();\r\n  const [card, setCard] = useState({});\r\n  const [breadCrumbs, setBreadCrumbs] = useState(<p>breadCrumbs</p>);\r\n  const [cardType, setCardType] = useState(<p>card</p>);\r\n  const [thisDeck, setThisDeck] = useState([]);\r\n  const [error, setError] = useState(undefined);\r\n  const [form, setForm] = useState(<p>form</p>);\r\n  const history = useHistory();\r\n  const initialFormState = {\r\n    id: 1,\r\n    front: \"Front side of card\",\r\n    back: \"Back side of card\",\r\n    deckId: deckId,\r\n  };\r\n  const [formData, setFormData] = useState({ ...initialFormState });\r\n\r\n  /*await setFormData({\r\n      ...formData,\r\n      id: thisDeck.cards.length + 1,\r\n    });\r\n    */\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    readDeck(deckId, abortController.signal).then(setThisDeck).catch(setError);\r\n\r\n    if (!cardId) {\r\n      setFormData({\r\n        ...formData,\r\n        id: thisDeck.cards.length + 1,\r\n      });\r\n      setBreadCrumbs(\r\n        <div className=\"card-header\">\r\n          <Link to=\"/\">Home</Link> /\r\n          <Link to=\"/decks/:deckId\"> {thisDeck.name}</Link> / Add Card\r\n        </div>\r\n      );\r\n      setCardType(\r\n        <div>\r\n          <h1 className=\"card-title\">{thisDeck.name}: Add Card</h1>\r\n        </div>\r\n      );\r\n      setForm(\r\n        <form onSubmit={handleSubmit} className=\"column\">\r\n          <label className=\"container-fluid\">\r\n            Front\r\n            <br />\r\n            <textarea\r\n              type=\"text\"\r\n              id=\"front\"\r\n              name=\"front\"\r\n              value={formData.front}\r\n              onChange={handleChange}\r\n              className=\"w-100\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <label className=\"container-fluid\">\r\n            Back\r\n            <br />\r\n            <textarea\r\n              type=\"text\"\r\n              id=\"back\"\r\n              name=\"back\"\r\n              value={formData.back}\r\n              onChange={handleChange}\r\n              className=\"w-100\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <Link\r\n            to={`/decks/${deckId}`}\r\n            type=\"button\"\r\n            className=\"btn btn-secondary m-1\"\r\n          >\r\n            Done\r\n          </Link>\r\n          <button type=\"submit\" className=\"btn btn-primary m-1\">\r\n            Save\r\n          </button>\r\n        </form>\r\n      );\r\n    } else {\r\n      setBreadCrumbs(\r\n        <div className=\"card-header\">\r\n          <Link to=\"/\">Home</Link> /\r\n          <Link to=\"/decks/:deckId\"> {thisDeck.name}</Link> / Edit Card {cardId}\r\n        </div>\r\n      );\r\n      setCardType(\r\n        <div>\r\n          <h1 className=\"card-title\">Edit Card</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }, [thisDeck]);\r\n\r\n  if (error) {\r\n    history.push(`/error/${error}`);\r\n  }\r\n\r\n  //form handling\r\n  const handleChange = ({ target }) => {\r\n    setFormData({\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(formData);\r\n    const abortController = new AbortController();\r\n    createCard(deckId, formData, abortController.signal)\r\n      .then(setFormData({ ...initialFormState }))\r\n      .catch(setError);\r\n  };\r\n  if (error) {\r\n    history.push(`/error/${error}`);\r\n  }\r\n\r\n  if (!cardId) {\r\n    return (\r\n      <section className=\"card\">\r\n        {breadCrumbs} {cardType} {form}\r\n      </section>\r\n    );\r\n  }\r\n  return (\r\n    <section className=\"card\">\r\n      {breadCrumbs} {cardType} {form}\r\n    </section>\r\n  );\r\n}\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}