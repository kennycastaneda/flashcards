{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenec\\\\Documents\\\\Thinkful\\\\Deployment\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Card\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { createCard, readDeck, updateCard, readCard } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card() {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [card, setCard] = useState({});\n  const [thisDeck, setThisDeck] = useState([]);\n  const [error, setError] = useState(undefined);\n  const history = useHistory();\n  const initialFormState = {\n    front: \"\",\n    back: \"\",\n    deckId: deckId\n  };\n  const [formData, setFormData] = useState(initialFormState);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const abortController = new AbortController();\n\n    try {\n      if (cardId) {\n        await updateCard(formData, abortController.signal);\n      } else {\n        await createCard(deckId, formData, abortController.signal);\n        setFormData(initialFormState);\n      }\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const handleChange = ({\n    target\n  }) => {\n    setFormData({ ...formData,\n      [target.name]: target.value\n    });\n  };\n\n  const handleAddAnother = () => {\n    setFormData(initialFormState);\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetchDeckInfo(deckId) {\n      try {\n        const deckInfo = await readDeck(deckId, abortController.signal);\n        setThisDeck(deckInfo);\n      } catch (error) {\n        setError(error);\n        history.push(`/error/${error}`);\n      }\n    }\n\n    fetchDeckInfo(deckId);\n  }, [deckId]);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetchCardInfo(cardId) {\n      try {\n        const card = await readCard(cardId, abortController.signal);\n        setCard(card);\n        setFormData({ ...formData,\n          id: card.id,\n          front: card.front,\n          back: card.back\n        });\n      } catch (error) {\n        setError(error);\n      }\n    }\n\n    if (cardId) {\n      fetchCardInfo(cardId);\n    }\n  }, [cardId]);\n  const cardTitle = !cardId ? \"Add Card\" : `Edit Card ${cardId}`;\n  const buttonDone = !cardId ? \"Done\" : \"Cancel\";\n  const buttonSave = !cardId ? \"Save\" : \"Submit\";\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), \" /\", /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}`,\n        children: [\" \", thisDeck.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"/ \", cardTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"card-title\",\n          children: [thisDeck.name, \": \", cardTitle]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"container-fluid\",\n          children: [\"Front\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            id: \"front\",\n            name: \"front\",\n            value: formData.front,\n            onChange: handleChange,\n            className: \"w-100\",\n            placeholder: \"Front side of card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"container-fluid\",\n          children: [\"Back\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            id: \"back\",\n            name: \"back\",\n            value: formData.back,\n            onChange: handleChange,\n            className: \"w-100\",\n            placeholder: \"Back side of card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            type: \"button\",\n            className: \"btn btn-secondary m-1\",\n            children: buttonDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary m-1\",\n            children: buttonSave\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), cardId && /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}/cards/new`,\n            className: \"btn btn-success m-1\",\n            type: \"button\",\n            onClick: handleAddAnother,\n            children: \"Add Another\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"Pf64TlYBiXnx3ayVo/RMXRlz6MY=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/kenec/Documents/Thinkful/Deployment/Project_Flashcards_Qualified_1/src/Layout/Card/Card.js"],"names":["React","useEffect","useState","Link","useHistory","useParams","createCard","readDeck","updateCard","readCard","Card","deckId","cardId","card","setCard","thisDeck","setThisDeck","error","setError","undefined","history","initialFormState","front","back","formData","setFormData","handleSubmit","event","preventDefault","abortController","AbortController","signal","handleChange","target","name","value","handleAddAnother","fetchDeckInfo","deckInfo","push","fetchCardInfo","id","cardTitle","buttonDone","buttonSave"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { createCard, readDeck, updateCard, readCard } from \"../../utils/api\";\r\n\r\nfunction Card() {\r\n  const { deckId, cardId } = useParams();\r\n  const [card, setCard] = useState({});\r\n  const [thisDeck, setThisDeck] = useState([]);\r\n  const [error, setError] = useState(undefined);\r\n  const history = useHistory();\r\n  const initialFormState = {\r\n    front: \"\",\r\n    back: \"\",\r\n    deckId: deckId,\r\n  };\r\n  const [formData, setFormData] = useState(initialFormState);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const abortController = new AbortController();\r\n\r\n    try {\r\n      if (cardId) {\r\n        await updateCard(formData, abortController.signal);\r\n      } else {\r\n        await createCard(deckId, formData, abortController.signal);\r\n        setFormData(initialFormState);\r\n      }\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  };\r\n  const handleChange = ({ target }) => {\r\n    setFormData({\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const handleAddAnother = () => {\r\n    setFormData(initialFormState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    async function fetchDeckInfo(deckId) {\r\n      try {\r\n        const deckInfo = await readDeck(deckId, abortController.signal);\r\n        setThisDeck(deckInfo);\r\n      } catch (error) {\r\n        setError(error);\r\n        history.push(`/error/${error}`);\r\n      }\r\n    }\r\n    fetchDeckInfo(deckId);\r\n  }, [deckId]);\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    async function fetchCardInfo(cardId) {\r\n      try {\r\n        const card = await readCard(cardId, abortController.signal);\r\n        setCard(card);\r\n        setFormData({\r\n          ...formData,\r\n          id: card.id,\r\n          front: card.front,\r\n          back: card.back,\r\n        });\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    }\r\n    if (cardId) {\r\n      fetchCardInfo(cardId);\r\n    }\r\n  }, [cardId]);\r\n  const cardTitle = !cardId ? \"Add Card\" : `Edit Card ${cardId}`;\r\n  const buttonDone = !cardId ? \"Done\" : \"Cancel\";\r\n  const buttonSave = !cardId ? \"Save\" : \"Submit\";\r\n  return (\r\n    <section className=\"card\">\r\n      <div className=\"card-header\">\r\n        <Link to=\"/\">Home</Link> /\r\n        <Link to={`/decks/${deckId}`}> {thisDeck.name} </Link>{\" \"}\r\n        <p>/ {cardTitle}</p>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div>\r\n          <h1 className=\"card-title\">\r\n            {thisDeck.name}: {cardTitle}\r\n          </h1>\r\n        </div>\r\n        <form onSubmit={handleSubmit} className=\"column\">\r\n          <label className=\"container-fluid\">\r\n            Front\r\n            <br />\r\n            <textarea\r\n              type=\"text\"\r\n              id=\"front\"\r\n              name=\"front\"\r\n              value={formData.front}\r\n              onChange={handleChange}\r\n              className=\"w-100\"\r\n              placeholder=\"Front side of card\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <label className=\"container-fluid\">\r\n            Back\r\n            <br />\r\n            <textarea\r\n              type=\"text\"\r\n              id=\"back\"\r\n              name=\"back\"\r\n              value={formData.back}\r\n              onChange={handleChange}\r\n              className=\"w-100\"\r\n              placeholder=\"Back side of card\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <div className=\"container\">\r\n            <Link\r\n              to={`/decks/${deckId}`}\r\n              type=\"button\"\r\n              className=\"btn btn-secondary m-1\"\r\n            >\r\n              {buttonDone}\r\n            </Link>\r\n            <button type=\"submit\" className=\"btn btn-primary m-1\">\r\n              {buttonSave}\r\n            </button>\r\n            {cardId && (\r\n              <Link\r\n                to={`/decks/${deckId}/cards/new`}\r\n                className=\"btn btn-success m-1\"\r\n                type=\"button\"\r\n                onClick={handleAddAnother}\r\n              >\r\n                Add Another\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}