{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenec\\\\Documents\\\\Thinkful\\\\Deployment\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Card\\\\Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory, Switch, Route } from \"react-router-dom\";\nimport { readDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Study() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [thisDeck, setThisDeck] = useState([]);\n  const history = useHistory();\n  const [error, setError] = useState(undefined);\n  const [cardNumber, setCardNumber] = useState(0);\n  const [cardText, setCardText] = useState( /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Not Enough Cards\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 44\n  }, this));\n  const [numberOfCards, setNumberOfCards] = useState(0);\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(setThisDeck).catch(setError);\n  }, []);\n\n  if (error) {\n    history.push(\"/error\");\n  }\n\n  if (thisDeck.id) {\n    if (thisDeck.cards.length > 2) {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), \" /\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/decks/:deckId\",\n            children: [\" \", thisDeck.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), \" / Study\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"card-title\",\n            children: [\"Study: \", thisDeck.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-text\",\n          children: [cardText, thisDeck.cards.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Study, \"vcOmXHyHSsj6xcF9OvrQQ5/DJY4=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["C:/Users/kenec/Documents/Thinkful/Deployment/Project_Flashcards_Qualified_1/src/Layout/Card/Study.js"],"names":["React","useState","useEffect","Link","useParams","useHistory","Switch","Route","readDeck","Study","deckId","thisDeck","setThisDeck","history","error","setError","undefined","cardNumber","setCardNumber","cardText","setCardText","numberOfCards","setNumberOfCards","abortController","AbortController","signal","then","catch","push","id","cards","length","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,MAAtC,EAA8CC,KAA9C,QAA2D,kBAA3D;AACA,SAASC,QAAT,QAAyB,iBAAzB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAaN,SAAS,EAA5B;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMY,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACe,SAAD,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD,CAAxC;AACA,QAAM,CAACoB,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,CAAD,CAAlD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAhB,IAAAA,QAAQ,CAACE,MAAD,EAASa,eAAe,CAACE,MAAzB,CAAR,CAAyCC,IAAzC,CAA8Cd,WAA9C,EAA2De,KAA3D,CAAiEZ,QAAjE;AACD,GAHQ,EAGN,EAHM,CAAT;;AAIA,MAAID,KAAJ,EAAW;AACTD,IAAAA,OAAO,CAACe,IAAR,CAAa,QAAb;AACD;;AAED,MAAIjB,QAAQ,CAACkB,EAAb,EAAiB;AACf,QAAIlB,QAAQ,CAACmB,KAAT,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,0BACE;AAAS,QAAA,SAAS,EAAC,MAAnB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,qBAEE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,gBAAT;AAAA,4BAA4BpB,QAAQ,CAACqB,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,kCAAmCrB,QAAQ,CAACqB,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,qBACGb,QADH,EAEGR,QAAQ,CAACmB,KAAT,CAAeC,MAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAeD;AACF;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GApCQtB,K;UACYL,S,EAEHC,U;;;KAHTI,K;AAsCT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useHistory, Switch, Route } from \"react-router-dom\";\r\nimport { readDeck } from \"../../utils/api\";\r\n\r\nfunction Study() {\r\n  const { deckId } = useParams();\r\n  const [thisDeck, setThisDeck] = useState([]);\r\n  const history = useHistory();\r\n  const [error, setError] = useState(undefined);\r\n  const [cardNumber, setCardNumber] = useState(0);\r\n  const [cardText, setCardText] = useState(<h3>Not Enough Cards</h3>);\r\n  const [numberOfCards, setNumberOfCards] = useState(0);\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    readDeck(deckId, abortController.signal).then(setThisDeck).catch(setError);\r\n  }, []);\r\n  if (error) {\r\n    history.push(\"/error\");\r\n  }\r\n\r\n  if (thisDeck.id) {\r\n    if (thisDeck.cards.length > 2) {\r\n      return (\r\n        <section className=\"card\">\r\n          <div className=\"card-header\">\r\n            <Link to=\"/\">Home</Link> /\r\n            <Link to=\"/decks/:deckId\"> {thisDeck.name}</Link> / Study\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <h1 className=\"card-title\">Study: {thisDeck.name}</h1>\r\n          </div>\r\n          <div className=\"card-text\">\r\n            {cardText}\r\n            {thisDeck.cards.length}\r\n          </div>\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n  return <h1>Loading...</h1>;\r\n}\r\n\r\nexport default Study;\r\n"]},"metadata":{},"sourceType":"module"}