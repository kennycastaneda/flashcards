{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenec\\\\Documents\\\\Thinkful\\\\Deployment\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport CreateDeckButton from \"./Card/CreateDeckButton\";\nimport DeckList from \"./Card/DeckList\";\nimport { listDecks } from \"../utils/api\";\nimport Study from \"./Card/Study\";\nimport Card from \"./Card/Card\";\nimport { useParams, useHistory, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  const [error, setError] = useState(undefined);\n  const history = useHistory();\n\n  const handleCreateDeck = () => {\n    history.push(\"/decks/new\");\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal).then(setDecks).catch(setError);\n  }, []);\n\n  if (error) {\n    history.push(`/${error}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(CreateDeckButton, {\n            handleCreateDeck: handleCreateDeck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DeckList, {\n            decks: decks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/study\",\n          children: /*#__PURE__*/_jsxDEV(Study, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/new\",\n          children: /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/decks/:deckId/cards/:cardId/edit\",\n          children: /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layout, \"8hzP9tFtzOJcGGBZ+hE81ZFYC/4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["C:/Users/kenec/Documents/Thinkful/Deployment/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","useEffect","useState","Header","NotFound","CreateDeckButton","DeckList","listDecks","Study","Card","useParams","useHistory","Route","Switch","useRouteMatch","Layout","decks","setDecks","error","setError","undefined","history","handleCreateDeck","push","abortController","AbortController","signal","then","catch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SACEC,SADF,EAEEC,UAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,aALF,QAMO,kBANP;;;AAQA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAACkB,SAAD,CAAlC;AACA,QAAMC,OAAO,GAAGV,UAAU,EAA1B;;AACA,QAAMW,gBAAgB,GAAG,MAAM;AAC7BD,IAAAA,OAAO,CAACE,IAAR,CAAa,YAAb;AACD,GAFD;;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAlB,IAAAA,SAAS,CAACiB,eAAe,CAACE,MAAjB,CAAT,CAAkCC,IAAlC,CAAuCV,QAAvC,EAAiDW,KAAjD,CAAuDT,QAAvD;AACD,GAHQ,EAGN,EAHM,CAAT;;AAIA,MAAID,KAAJ,EAAW;AACTG,IAAAA,OAAO,CAACE,IAAR,CAAc,IAAGL,KAAM,EAAvB;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE,IAAd;AAAoB,UAAA,IAAI,EAAC,GAAzB;AAAA,kCACE,QAAC,gBAAD;AAAkB,YAAA,gBAAgB,EAAEI;AAApC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEN;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,sBAAZ;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,0BAAZ;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF,eAWE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,mCAAZ;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF,eAcE,QAAC,KAAD;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA1CQD,M;UAGSJ,U;;;KAHTI,M;AA4CT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport CreateDeckButton from \"./Card/CreateDeckButton\";\nimport DeckList from \"./Card/DeckList\";\nimport { listDecks } from \"../utils/api\";\nimport Study from \"./Card/Study\";\nimport Card from \"./Card/Card\";\nimport {\n  useParams,\n  useHistory,\n  Route,\n  Switch,\n  useRouteMatch,\n} from \"react-router-dom\";\n\nfunction Layout() {\n  const [decks, setDecks] = useState([]);\n  const [error, setError] = useState(undefined);\n  const history = useHistory();\n  const handleCreateDeck = () => {\n    history.push(\"/decks/new\");\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal).then(setDecks).catch(setError);\n  }, []);\n  if (error) {\n    history.push(`/${error}`);\n  }\n\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact={true} path=\"/\">\n            <CreateDeckButton handleCreateDeck={handleCreateDeck} />\n            <DeckList decks={decks} />\n          </Route>\n          <Route path=\"/decks/:deckId/study\">\n            <Study />\n          </Route>\n          <Route path=\"/decks/:deckId/cards/new\">\n            <Card />\n          </Route>\n          <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n            <Card />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n        {/* TODO: Implement the screen starting here */}\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}