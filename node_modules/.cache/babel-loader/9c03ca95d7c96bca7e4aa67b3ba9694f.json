{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenec\\\\Documents\\\\Thinkful\\\\Deployment\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Card\\\\DeckView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useRouteMatch, useParams } from \"react-router-dom\";\nimport { deleteDeck, readDeck, listCards } from \"../../utils/api\";\nimport ListCard from \"./ListCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeskView() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [thisDeck, setThisDeck] = useState([]);\n  const [error, setError] = useState(undefined);\n  const history = useHistory();\n  const [thisDeckCards, setThisDeckCards] = useState([]);\n\n  const handleDeleteDeck = () => {\n    const abortController = new AbortController();\n\n    if (window.confirm(`Do you really want to delete deck ${thisDeck.name}? There is no going back.`)) {\n      deleteDeck(deckId, abortController.signal);\n      console.log(\"deleted deck\");\n      history.push(\"/\");\n      window.location.reload();\n    }\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetchReadDeck(deckId) {\n      try {\n        const readDeckInfo = await readDeck(deckId, abortController.signal);\n        setThisDeck(readDeckInfo);\n      } catch (error) {\n        setError(error);\n        history.push(`/error/${error}`);\n      }\n    }\n\n    fetchReadDeck(deckId);\n  }, []);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetchDeckCards(deckId) {\n      try {\n        const readCards = await listCards(deckId, abortController.signal);\n        setThisDeckCards(readCards);\n      } catch (error) {\n        setError(error);\n        history.push(`/error/${error}`);\n      }\n    }\n\n    fetchDeckCards(deckId);\n  }, []);\n  const listDeckCards = thisDeckCards.map(card => /*#__PURE__*/_jsxDEV(ListCard, {\n    card: card\n  }, card.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \" / \", thisDeck.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: thisDeck.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: thisDeck.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}/edit`,\n            type: \"button\",\n            className: \"btn btn-secondary m-1\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}/study`,\n            type: \"button\",\n            className: \"btn btn-primary m-1\",\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}/cards/new`,\n            type: \"button\",\n            className: \"btn btn-success m-1\",\n            children: \"+ Add Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeleteDeck,\n            type: \"button\",\n            className: \"btn btn-danger m-1 align-self-end\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), thisDeckCards[0] && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: listDeckCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeskView, \"Lrd+eIEHDVu1eU1bz+Rj/7T2hhk=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DeskView;\nexport default DeskView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeskView\");","map":{"version":3,"sources":["C:/Users/kenec/Documents/Thinkful/Deployment/Project_Flashcards_Qualified_1/src/Layout/Card/DeckView.js"],"names":["React","useEffect","useState","Link","useHistory","useRouteMatch","useParams","deleteDeck","readDeck","listCards","ListCard","DeskView","deckId","thisDeck","setThisDeck","error","setError","undefined","history","thisDeckCards","setThisDeckCards","handleDeleteDeck","abortController","AbortController","window","confirm","name","signal","console","log","push","location","reload","fetchReadDeck","readDeckInfo","fetchDeckCards","readCards","listDeckCards","map","card","id","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useRouteMatch, useParams } from \"react-router-dom\";\r\nimport { deleteDeck, readDeck, listCards } from \"../../utils/api\";\r\nimport ListCard from \"./ListCard\";\r\n\r\nfunction DeskView() {\r\n  const { deckId } = useParams();\r\n  const [thisDeck, setThisDeck] = useState([]);\r\n  const [error, setError] = useState(undefined);\r\n  const history = useHistory();\r\n  const [thisDeckCards, setThisDeckCards] = useState([]);\r\n  const handleDeleteDeck = () => {\r\n    const abortController = new AbortController();\r\n    if (\r\n      window.confirm(\r\n        `Do you really want to delete deck ${thisDeck.name}? There is no going back.`\r\n      )\r\n    ) {\r\n      deleteDeck(deckId, abortController.signal);\r\n      console.log(\"deleted deck\");\r\n      history.push(\"/\");\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    async function fetchReadDeck(deckId) {\r\n      try {\r\n        const readDeckInfo = await readDeck(deckId, abortController.signal);\r\n        setThisDeck(readDeckInfo);\r\n      } catch (error) {\r\n        setError(error);\r\n        history.push(`/error/${error}`);\r\n      }\r\n    }\r\n    fetchReadDeck(deckId);\r\n  }, []);\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    async function fetchDeckCards(deckId) {\r\n      try {\r\n        const readCards = await listCards(deckId, abortController.signal);\r\n        setThisDeckCards(readCards);\r\n      } catch (error) {\r\n        setError(error);\r\n        history.push(`/error/${error}`);\r\n      }\r\n    }\r\n    fetchDeckCards(deckId);\r\n  }, []);\r\n\r\n  const listDeckCards = thisDeckCards.map((card) => (\r\n    <ListCard key={card.id} card={card} />\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"card\">\r\n        <div className=\"card-header\">\r\n          <Link to=\"/\">Home</Link> / {thisDeck.name}\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"card-title\">\r\n            <h1>{thisDeck.name}</h1>\r\n          </div>\r\n          <div className=\"card-text\">\r\n            <p>{thisDeck.description}</p>\r\n            <Link\r\n              to={`/decks/${deckId}/edit`}\r\n              type=\"button\"\r\n              className=\"btn btn-secondary m-1\"\r\n            >\r\n              Edit\r\n            </Link>\r\n            <Link\r\n              to={`/decks/${deckId}/study`}\r\n              type=\"button\"\r\n              className=\"btn btn-primary m-1\"\r\n            >\r\n              Study\r\n            </Link>\r\n            <Link\r\n              to={`/decks/${deckId}/cards/new`}\r\n              type=\"button\"\r\n              className=\"btn btn-success m-1\"\r\n            >\r\n              + Add Card\r\n            </Link>\r\n            <button\r\n              onClick={handleDeleteDeck}\r\n              type=\"button\"\r\n              className=\"btn btn-danger m-1 align-self-end\"\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {thisDeckCards[0] && (\r\n        <section>\r\n          <h1>Cards</h1>\r\n          <div className=\"container\">{listDeckCards}</div>\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeskView;\r\n"]},"metadata":{},"sourceType":"module"}