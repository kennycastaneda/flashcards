{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenec\\\\Documents\\\\Thinkful\\\\Deployment\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Card\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, use } from \"react\";\nimport { Link, useHistory, useRouteMatch, useParams } from \"react-router-dom\";\nimport { deleteDeck, readDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card() {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const {\n    url\n  } = useRouteMatch();\n  const [breadCrumbs, setBreadCrumbs] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"breadCrumbs\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 50\n  }, this));\n  const [card, setCard] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"card\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 36\n  }, this));\n  const [thisDeck, setThisDeck] = useState([]);\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(setThisDeck).catch(setError);\n\n    if (!cardId) {\n      setBreadCrumbs( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), \" /\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/decks/:deckId\",\n          children: [\" \", thisDeck.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), \" / Add Card\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this));\n    }\n  }, [thisDeck]);\n\n  if (!cardId) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"card\",\n      children: [breadCrumbs, \" \", card]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"card\",\n    children: [breadCrumbs, \" \", card]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"91KLgp3xf6vxDBujGFVjfTw5iWI=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/kenec/Documents/Thinkful/Deployment/Project_Flashcards_Qualified_1/src/Layout/Card/Card.js"],"names":["React","useEffect","useState","use","Link","useHistory","useRouteMatch","useParams","deleteDeck","readDeck","Card","deckId","cardId","url","breadCrumbs","setBreadCrumbs","card","setCard","thisDeck","setThisDeck","abortController","AbortController","signal","then","catch","setError","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,GAArC,QAAgD,OAAhD;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,aAA3B,EAA0CC,SAA1C,QAA2D,kBAA3D;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,iBAArC;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBL,SAAS,EAApC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAUP,aAAa,EAA7B;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD,CAA9C;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD,CAAhC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAZ,IAAAA,QAAQ,CAACE,MAAD,EAASS,eAAe,CAACE,MAAzB,CAAR,CAAyCC,IAAzC,CAA8CJ,WAA9C,EAA2DK,KAA3D,CAAiEC,QAAjE;;AACA,QAAI,CAACb,MAAL,EAAa;AACXG,MAAAA,cAAc,eACZ;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,qBAEE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,gBAAT;AAAA,0BAA4BG,QAAQ,CAACQ,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADY,CAAd;AAMD;AACF,GAXQ,EAWN,CAACR,QAAD,CAXM,CAAT;;AAaA,MAAI,CAACN,MAAL,EAAa;AACX,wBACE;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA,iBACGE,WADH,OACiBE,IADjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,eACGF,WADH,OACiBE,IADjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAhCQN,I;UACoBH,S,EACXD,a;;;KAFTI,I;AAiCT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState, use } from \"react\";\r\nimport { Link, useHistory, useRouteMatch, useParams } from \"react-router-dom\";\r\nimport { deleteDeck, readDeck } from \"../../utils/api\";\r\n\r\nfunction Card() {\r\n  const { deckId, cardId } = useParams();\r\n  const { url } = useRouteMatch();\r\n  const [breadCrumbs, setBreadCrumbs] = useState(<p>breadCrumbs</p>);\r\n  const [card, setCard] = useState(<p>card</p>);\r\n  const [thisDeck, setThisDeck] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    readDeck(deckId, abortController.signal).then(setThisDeck).catch(setError);\r\n    if (!cardId) {\r\n      setBreadCrumbs(\r\n        <div className=\"card-header\">\r\n          <Link to=\"/\">Home</Link> /\r\n          <Link to=\"/decks/:deckId\"> {thisDeck.name}</Link> / Add Card\r\n        </div>\r\n      );\r\n    }\r\n  }, [thisDeck]);\r\n\r\n  if (!cardId) {\r\n    return (\r\n      <section className=\"card\">\r\n        {breadCrumbs} {card}\r\n      </section>\r\n    );\r\n  }\r\n  return (\r\n    <section className=\"card\">\r\n      {breadCrumbs} {card}\r\n    </section>\r\n  );\r\n}\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}