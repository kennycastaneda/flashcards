{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenec\\\\Documents\\\\Thinkful\\\\Deployment\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Card\\\\Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory, Switch, Route } from \"react-router-dom\";\nimport { readDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Study() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [thisDeck, setThisDeck] = useState([Hello]);\n  const history = useHistory();\n  const [error, setError] = useState(undefined);\n  const [cardNumber, setCardNumber] = useState(0);\n  const [cardText, setCardText] = useState( /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Not Enough Cards\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 44\n  }, this));\n  const [numberOfCards, setNumberOfCards] = useState(0);\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(setThisDeck).then(setCardText( /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: thisDeck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }, this))).catch(setError);\n  }, []);\n\n  if (error) {\n    history.push(\"/error\", error);\n  }\n\n  if (thisDeck.id) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), \" /\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/decks/:deckId\",\n          children: [\" \", thisDeck.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), \" / Study\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"card-title\",\n          children: [\"Study: \", thisDeck.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-text\",\n        children: [cardText, thisDeck.cards[cardNumber].front]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Study, \"lGRIa745AQSPQAVTXn34vWJyNHc=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["C:/Users/kenec/Documents/Thinkful/Deployment/Project_Flashcards_Qualified_1/src/Layout/Card/Study.js"],"names":["React","useState","useEffect","Link","useParams","useHistory","Switch","Route","readDeck","Study","deckId","thisDeck","setThisDeck","Hello","history","error","setError","undefined","cardNumber","setCardNumber","cardText","setCardText","numberOfCards","setNumberOfCards","abortController","AbortController","signal","then","catch","push","id","name","cards","front"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,MAAtC,EAA8CC,KAA9C,QAA2D,kBAA3D;AACA,SAASC,QAAT,QAAyB,iBAAzB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAaN,SAAS,EAA5B;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,CAACY,KAAD,CAAD,CAAxC;AACA,QAAMC,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAACgB,SAAD,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,eAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAD,CAAxC;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,CAAD,CAAlD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAjB,IAAAA,QAAQ,CAACE,MAAD,EAASc,eAAe,CAACE,MAAzB,CAAR,CACGC,IADH,CACQf,WADR,EAEGe,IAFH,CAEQN,WAAW,eAAC;AAAA,gBAAKV;AAAL;AAAA;AAAA;AAAA;AAAA,YAAD,CAFnB,EAGGiB,KAHH,CAGSZ,QAHT;AAID,GANQ,EAMN,EANM,CAAT;;AAOA,MAAID,KAAJ,EAAW;AACTD,IAAAA,OAAO,CAACe,IAAR,CAAa,QAAb,EAAuBd,KAAvB;AACD;;AAED,MAAIJ,QAAQ,CAACmB,EAAb,EAAiB;AACf,wBACE;AAAS,MAAA,SAAS,EAAC,MAAnB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,qBAEE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,gBAAT;AAAA,0BAA4BnB,QAAQ,CAACoB,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,gCAAmCpB,QAAQ,CAACoB,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAQE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBACGX,QADH,EAEGT,QAAQ,CAACqB,KAAT,CAAed,UAAf,EAA2Be,KAF9B;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GArCQxB,K;UACYL,S,EAEHC,U;;;KAHTI,K;AAuCT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useHistory, Switch, Route } from \"react-router-dom\";\r\nimport { readDeck } from \"../../utils/api\";\r\n\r\nfunction Study() {\r\n  const { deckId } = useParams();\r\n  const [thisDeck, setThisDeck] = useState([Hello]);\r\n  const history = useHistory();\r\n  const [error, setError] = useState(undefined);\r\n  const [cardNumber, setCardNumber] = useState(0);\r\n  const [cardText, setCardText] = useState(<h3>Not Enough Cards</h3>);\r\n  const [numberOfCards, setNumberOfCards] = useState(0);\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    readDeck(deckId, abortController.signal)\r\n      .then(setThisDeck)\r\n      .then(setCardText(<h1>{thisDeck}</h1>))\r\n      .catch(setError);\r\n  }, []);\r\n  if (error) {\r\n    history.push(\"/error\", error);\r\n  }\r\n\r\n  if (thisDeck.id) {\r\n    return (\r\n      <section className=\"card\">\r\n        <div className=\"card-header\">\r\n          <Link to=\"/\">Home</Link> /\r\n          <Link to=\"/decks/:deckId\"> {thisDeck.name}</Link> / Study\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h1 className=\"card-title\">Study: {thisDeck.name}</h1>\r\n        </div>\r\n        <div className=\"card-text\">\r\n          {cardText}\r\n          {thisDeck.cards[cardNumber].front}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n  return <h1>Loading...</h1>;\r\n}\r\n\r\nexport default Study;\r\n"]},"metadata":{},"sourceType":"module"}