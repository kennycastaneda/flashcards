{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kenec\\\\Documents\\\\Thinkful\\\\Deployment\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Card\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, use } from \"react\";\nimport { Link, useHistory, useRouteMatch, useParams } from \"react-router-dom\";\nimport { createCard, readDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card() {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const {\n    url\n  } = useRouteMatch();\n  const [card, setCard] = useState({});\n  const [breadCrumbs, setBreadCrumbs] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"breadCrumbs\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 50\n  }, this));\n  const [cardType, setCardType] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"card\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 44\n  }, this));\n  const [thisDeck, setThisDeck] = useState([]);\n  const [error, setError] = useState(undefined);\n  const [form, setForm] = useState( /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"form\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 36\n  }, this));\n  const history = useHistory(); //form information\n\n  const initialFormState = {\n    front: \"\",\n    email: \"\"\n  };\n\n  const handleSubmit = event => {\n    const abortController = new AbortController();\n    createCard(deckId, card, abortController);\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(setThisDeck).catch(setError);\n\n    if (!cardId) {\n      setBreadCrumbs( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), \" /\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/decks/:deckId\",\n          children: [\" \", thisDeck.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), \" / Add Card\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this));\n      setCardType( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"card-title\",\n          children: [thisDeck.name, \": Add Card\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this));\n      setForm( /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Front\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: changes,\n            onChange: handleChange,\n            name: \"front\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          value: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this));\n    } else {\n      setBreadCrumbs( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), \" /\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/decks/:deckId\",\n          children: [\" \", thisDeck.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), \" / Edit Card \", cardId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this));\n      setCardType( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"card-title\",\n          children: \"Edit Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this));\n    }\n  }, [thisDeck]);\n\n  if (error) {\n    history.push(\"/error\");\n  }\n\n  if (!cardId) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"card\",\n      children: [breadCrumbs, \" \", cardType, \" \", form]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"card\",\n    children: [breadCrumbs, \" \", cardType, \" \", form]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"6NsbXCj/YJG5KEjsYstYQFkirqA=\", false, function () {\n  return [useParams, useRouteMatch, useHistory];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/kenec/Documents/Thinkful/Deployment/Project_Flashcards_Qualified_1/src/Layout/Card/Card.js"],"names":["React","useEffect","useState","use","Link","useHistory","useRouteMatch","useParams","createCard","readDeck","Card","deckId","cardId","url","card","setCard","breadCrumbs","setBreadCrumbs","cardType","setCardType","thisDeck","setThisDeck","error","setError","undefined","form","setForm","history","initialFormState","front","email","handleSubmit","event","abortController","AbortController","signal","then","catch","name","changes","handleChange","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, use } from \"react\";\r\nimport { Link, useHistory, useRouteMatch, useParams } from \"react-router-dom\";\r\nimport { createCard, readDeck } from \"../../utils/api\";\r\n\r\nfunction Card() {\r\n  const { deckId, cardId } = useParams();\r\n  const { url } = useRouteMatch();\r\n  const [card, setCard] = useState({});\r\n  const [breadCrumbs, setBreadCrumbs] = useState(<p>breadCrumbs</p>);\r\n  const [cardType, setCardType] = useState(<p>card</p>);\r\n  const [thisDeck, setThisDeck] = useState([]);\r\n  const [error, setError] = useState(undefined);\r\n  const [form, setForm] = useState(<p>form</p>);\r\n  const history = useHistory();\r\n\r\n  //form information\r\n  const initialFormState = {\r\n    front: \"\",\r\n    email: \"\",\r\n  };\r\n  const handleSubmit = (event) => {\r\n    const abortController = new AbortController();\r\n    createCard(deckId, card, abortController);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    readDeck(deckId, abortController.signal).then(setThisDeck).catch(setError);\r\n\r\n    if (!cardId) {\r\n      setBreadCrumbs(\r\n        <div className=\"card-header\">\r\n          <Link to=\"/\">Home</Link> /\r\n          <Link to=\"/decks/:deckId\"> {thisDeck.name}</Link> / Add Card\r\n        </div>\r\n      );\r\n      setCardType(\r\n        <div>\r\n          <h1 className=\"card-title\">{thisDeck.name}: Add Card</h1>\r\n        </div>\r\n      );\r\n      setForm(\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Front\r\n            <textarea value={changes} onChange={handleChange} name=\"front\" />\r\n          </label>\r\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" />\r\n        </form>\r\n      );\r\n    } else {\r\n      setBreadCrumbs(\r\n        <div className=\"card-header\">\r\n          <Link to=\"/\">Home</Link> /\r\n          <Link to=\"/decks/:deckId\"> {thisDeck.name}</Link> / Edit Card {cardId}\r\n        </div>\r\n      );\r\n      setCardType(\r\n        <div>\r\n          <h1 className=\"card-title\">Edit Card</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }, [thisDeck]);\r\n  if (error) {\r\n    history.push(\"/error\");\r\n  }\r\n\r\n  if (!cardId) {\r\n    return (\r\n      <section className=\"card\">\r\n        {breadCrumbs} {cardType} {form}\r\n      </section>\r\n    );\r\n  }\r\n  return (\r\n    <section className=\"card\">\r\n      {breadCrumbs} {cardType} {form}\r\n    </section>\r\n  );\r\n}\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}